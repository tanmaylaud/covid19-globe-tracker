{"version":3,"sources":["utils/index.tsx","Constants.tsx","GlobalCounts.tsx","Globe.tsx","PolygonLabel.tsx","Counter.tsx","Spinner.tsx","App.tsx","index.tsx"],"names":["request","url","a","fetch","res","json","data","getCoordinates","latitude","longitude","numberWithCommas","x","toString","replace","navigator","userAgent","vendor","window","opera","test","substr","GEOJSON_URL","CASES_API","GlobalCounts","totalConfirmed","totalDeaths","totalRecoveries","totalActive","set","world","getVal","feat","Math","pow","covidData","active","properties","POP_EST","colorScale","scaleSequential","interpolateReds","initGlobe","globeContainer","document","getElementById","Globe","globeImageUrl","backgroundImageUrl","showGraticules","polygonAltitude","showAtmosphere","polygonCapColor","polygonSideColor","polygonStrokeColor","polygonLabel","d","c","flagName","NAME","confirmed","deaths","recoveries","format","getPolygonLabel","ADMIN","ISO_A2","toLowerCase","getFlagName","onPolygonHover","hoverD","polygonsTransitionDuration","getCases","addEventListener","event","width","innerWidth","height","innerHeight","countries","featureCollection","dates","features","Object","keys","India","updateCounters","updatePolygonsData","updatePointOfView","date","length","forEach","item","countryDate","country","maxVal","max","map","domain","polygonsData","pointOfView","lat","lng","console","log","Counter","count","useState","counter","setCounter","useEffect","Spinner","props","loaded","className","style","position","left","bottom","App","totals","setTotals","loaderTimeout","timedOut","setTimeout","total","push","location","reload","id","fontSize","color","marginTop","padding","href","rel","target","textDecoration","rootElement","render"],"mappings":"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","file":"static/js/main.1eb067c6.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\n\nexport async function request(url: string) {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function getCoordinates() {\n  try {\n    const { latitude, longitude } = await request(\n      \"https://geolocation-db.com/json/\"\n    );\n\n    return {\n      latitude,\n      longitude,\n    };\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport function numberWithCommas(x: number) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function formatDate(date: string, format = \"MMMM D, YYYY\") {\n  return dayjs(date).format(format);\n}\n\nexport const isMobile = (function (a) {\n  return (\n    /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n      a\n    ) ||\n    /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n      a.substr(0, 4)\n    )\n  );\n  // @ts-ignore\n})(navigator.userAgent || navigator.vendor || window.opera);\n","export const GLOBE_IMAGE_URL =\n  \"//cdn.jsdelivr.net/npm/three-globe/example/img/earth-dark.jpg\";\nexport const BACKGROUND_IMAGE_URL =\n  \"//cdn.jsdelivr.net/npm/three-globe/example/img/night-sky.png\";\nexport const GEOJSON_URL =\n  \"https://raw.githubusercontent.com/nvkelso/natural-earth-vector/master/geojson/ne_110m_admin_0_countries.geojson\";\nexport const CASES_API =\n  \"https://raw.githubusercontent.com/wobsoriano/covid3d/master/data.json\";\n\nexport const FLAG_ENDPOINT = \"https://corona.lmao.ninja/assets/img/flags\";\n","export class GlobalCounts {\n  static totalConfirmed: number = 0;\n  static totalDeaths: number = 0;\n  static totalRecoveries: number = 0;\n  static totalActive: number = 0;\n  static set: boolean;\n  private constructor() {}\n}\n","import Globe, { GlobeInstance } from \"globe.gl\";\nimport { request, getCoordinates } from \"./utils\";\nimport {\n  GLOBE_IMAGE_URL,\n  BACKGROUND_IMAGE_URL,\n  GEOJSON_URL,\n  CASES_API,\n} from \"./Constants\";\nimport { interpolateReds, scaleSequential } from \"d3\";\nimport { Countries, Country } from \"./Country\";\nimport { GlobalCounts } from \"./GlobalCounts\";\nimport { getPolygonLabel } from \"./PolygonLabel\";\n\nconst getVal = (feat: any) => {\n  return Math.pow(feat.covidData.active / feat.properties.POP_EST, 1 / 4);\n};\n\ninterface Feature {\n  properties: {\n    NAME: string;\n    POP_EST: number;\n  };\n  covidData: Country;\n}\n\nlet world: GlobeInstance;\nconst colorScale = scaleSequential(interpolateReds);\n\nexport function initGlobe() {\n  // Globe container\n  const globeContainer: HTMLElement = document.getElementById(\"globeViz\")!;\n  world = Globe()(globeContainer)\n    .globeImageUrl(GLOBE_IMAGE_URL)\n    .backgroundImageUrl(BACKGROUND_IMAGE_URL)\n    .showGraticules(false)\n    .polygonAltitude(0.06)\n    .showAtmosphere(false)\n    .polygonCapColor((feat: any) => colorScale(getVal(feat)))\n    .polygonSideColor(() => \"rgba(100, 100, 100, 0.05)\")\n    .polygonStrokeColor(() => \"#ffff\")\n    .polygonLabel(({ properties: d, covidData: c }: any) => {\n      const flagName = getFlagName(d);\n      return getPolygonLabel(flagName, d, c);\n    })\n    .onPolygonHover((hoverD: any) =>\n      world\n        .polygonAltitude((d: any) => (d === hoverD ? 0.1 : 0.06))\n        .polygonCapColor((d: any) =>\n          d === hoverD ? \"yellow\" : colorScale(getVal(d))\n        )\n    )\n    .polygonsTransitionDuration(200);\n\n  getCases();\n  window.addEventListener(\"resize\", (event: UIEvent) => {\n    world.width(window.innerWidth);\n    world.height(window.innerHeight);\n  });\n\n  function getFlagName(d: any) {\n    switch (d.ADMIN) {\n      case \"France\":\n        return \"fr\";\n      case \"Norway\":\n        return \"no\";\n      default:\n        return d.ISO_A2.toLowerCase();\n    }\n  }\n}\n\nlet dates: string[] = [];\nlet countries: Countries;\nlet featureCollection: Feature[];\n\nasync function getCases() {\n  countries = await request(CASES_API);\n  featureCollection = (await request(GEOJSON_URL)).features;\n\n  dates = Object.keys(countries.India);\n\n  await updateCounters();\n  await updatePolygonsData();\n\n  await updatePointOfView();\n}\n\nfunction updateCounters() {\n  let totalConfirmed = 0;\n  let totalDeaths = 0;\n  let totalRecoveries = 0;\n  const date = dates.length - 1;\n  Object.keys(countries).forEach((item: string) => {\n    if (countries[item][dates[date]]) {\n      const countryDate = countries[item][dates[date]];\n      totalConfirmed += +countryDate.confirmed;\n      totalDeaths += +countryDate.deaths;\n      totalRecoveries += countryDate.recoveries ? +countryDate.recoveries : 0;\n    }\n  });\n  GlobalCounts.totalConfirmed = totalConfirmed;\n  GlobalCounts.totalDeaths = totalDeaths;\n  GlobalCounts.totalRecoveries = totalRecoveries;\n  GlobalCounts.totalActive = totalConfirmed - totalRecoveries - totalDeaths;\n  GlobalCounts.set = true;\n}\n\nfunction updatePolygonsData() {\n  const date = dates.length - 1;\n  for (let x = 0; x < featureCollection.length; x++) {\n    const country = featureCollection[x].properties.NAME;\n    if (countries[country]) {\n      featureCollection[x].covidData = {\n        confirmed: countries[country][dates[date]].confirmed,\n        deaths: countries[country][dates[date]].deaths,\n        recoveries: countries[country][dates[date]].recoveries,\n        active:\n          countries[country][dates[date]].confirmed -\n          countries[country][dates[date]].deaths -\n          countries[country][dates[date]].recoveries,\n      };\n    } else {\n      featureCollection[x].covidData = {\n        confirmed: 0,\n        deaths: 0,\n        recoveries: 0,\n        active: 0,\n      };\n    }\n  }\n\n  const maxVal = Math.max(...featureCollection.map(getVal));\n  colorScale.domain([0, maxVal]);\n  world.polygonsData(featureCollection);\n}\n\nasync function updatePointOfView() {\n  // Get coordinates\n  try {\n    const { latitude, longitude } = await getCoordinates();\n\n    world.pointOfView(\n      {\n        lat: latitude,\n        lng: longitude,\n      },\n      1000\n    );\n  } catch (e) {\n    console.log(\"Unable to set point of view.\");\n  }\n}\n","import { format } from \"d3\";\nimport { FLAG_ENDPOINT } from \"./Constants\";\nimport { numberWithCommas } from \"./utils\";\n\nexport function getPolygonLabel(flagName: string, d: any, c: any): string {\n  return `\n          <div class=\"card\">\n            <img class=\"card-img\" src=\"${FLAG_ENDPOINT}/${flagName}.png\" alt=\"flag\" />\n            <div class=\"container\">\n               <span class=\"card-title\"><b>${d.NAME}</b></span> <br />\n               <div class=\"card-spacer\"></div>\n               <hr />\n               <div class=\"card-spacer\"></div>\n               <span>Cases: ${numberWithCommas(c.confirmed)}</span>  <br />\n               <span>Deaths: ${numberWithCommas(c.deaths)}</span> <br />\n               <span>Recovered: ${numberWithCommas(c.recoveries)}</span> <br />\n               <span>Active: ${numberWithCommas(c.active)}</span>  <br />\n               <span>Population: ${format(\".3s\")(d.POP_EST)}</span>\n            </div>\n          </div>\n        `;\n}\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\ninterface CounterProps {\n  count: number;\n}\n\nexport function Counter({ count }: CounterProps) {\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    if (counter <= count) {\n      if (count - counter <= 200) setCounter(counter + 1);\n      else if (count - counter <= 1000) setCounter(counter + 100);\n      else if (count - counter <= 10000) setCounter(counter + 1000);\n      else setCounter(counter + 1000);\n    }\n  }, [counter]);\n\n  function numberWithCommas(x: number) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return <>{numberWithCommas(counter)}</>;\n}\n","import React from \"react\";\nimport \"./Spinner.css\";\nexport function Spinner(props: { loaded: boolean }) {\n  return !props.loaded ? (\n    <div className=\"spinbody\">\n      <div className=\"spinner\"></div>\n      <p style={{ position: \"absolute\", left: \"40%\", bottom: \"50px\" }}></p>\n    </div>\n  ) : null;\n}\n","import * as React from \"react\";\nimport \"./styles.css\";\nimport { useState, useEffect } from \"react\";\nimport { initGlobe } from \"./Globe\";\nimport { GlobalCounts } from \"./GlobalCounts\";\nimport { Counter } from \"./Counter\";\nimport { Spinner } from \"./Spinner\";\n\nexport default function App() {\n  const [totals, setTotals] = useState<number[]>([]);\n  const [loaderTimeout, timedOut] = useState(false);\n  useEffect(() => initGlobe(), []);\n  useEffect(() => {\n    setTimeout(() => timedOut(true), 5000);\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      let total: number[] = [];\n      total.push(GlobalCounts.totalConfirmed);\n      total.push(GlobalCounts.totalDeaths);\n      total.push(GlobalCounts.totalRecoveries);\n      total.push(GlobalCounts.totalActive);\n      setTotals(total);\n      if (!GlobalCounts.set) window.location.reload();\n    }, 3000);\n  }, [GlobalCounts.set]);\n\n  return (\n    <React.Fragment>\n      <div id=\"globeViz\"></div>\n      <div className=\"top-info-container\">\n        <div className=\"title\">COVID-19 Globe Tracker</div>\n        <div className=\"title-desc\">\n          Hover on a country or territory for details\n        </div>\n      </div>\n      <div className=\"bottom-info-container\">\n        <span className=\"gradient-container\">\n          LOW<div className=\"gradient\"></div>HIGH\n        </span>\n        <Spinner loaded={GlobalCounts.set || loaderTimeout} />\n        {GlobalCounts.set ? (\n          <>\n            <div\n              style={{ fontSize: \"14px\", color: \"#ccd6f6\", marginTop: \"35px\" }}\n            >\n              Total Counts <span className=\"updated\"></span>\n            </div>\n            <div style={{ color: \"#e6f1ff\", padding: \"0 5px\" }}>\n              <span id=\"infected\">\n                INFECTED:\n                <Counter count={totals[0]} />\n              </span>\n              <span id=\"deaths\">\n                {\" \"}\n                • DEATHS:\n                <Counter count={totals[1]} />\n              </span>\n              <span id=\"recovered\">\n                {\" \"}\n                • RECOVERED:\n                <Counter count={totals[2]} />\n              </span>\n              <span id=\"active\">\n                {\" \"}\n                • ACTIVE:\n                <Counter count={totals[3]} />\n              </span>\n            </div>\n          </>\n        ) : null}\n        <div className=\"moreInfo\" style={{ marginTop: \"5px\" }}>\n          <a\n            href=\"https://github.com/tanmaylaud/covid19-globe-tracker\"\n            rel=\"noopener noreferrer\"\n            target=\"_BLANK\"\n            style={{ color: \"yellow\", textDecoration: \"none\" }}\n          >\n            Click For More Information\n          </a>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import App from \"./App\";\nimport { render } from \"react-dom\";\nimport React from \"react\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}